<style lang="less">
</style>

<template>
  <view class="container">
    <titask wx:if="{{taskType == 0}}"></titask>
    <mttask wx:elif="{{taskType == 1}}"></mttask>
    <rtask wx:elif="{{taskType == 2}}"></rtask>
    <bomm></bomm>
  </view>
</template>

<script>
import wepy from 'wepy';
// 状态管理
import { connect } from 'wepy-redux';
import bomm from './components/task-bomm';
import centre from './components/task-centre';
import titask from '../tour-inspection/components/ti-task-info';
import mttask from '../maintain/components/mt-task-info';
import rtask from '../reconnaissance/components/r-task-info';

export default class TaskDetail extends wepy.page {
  //对应 app.json 文件
  config = {
    navigationBarTitleText: '任务详情',
    usingComponents: {
      'i-collapse': '../../iview/collapse-sd/index',
      'i-collapse-item': '../../iview/collapse-item-sd/index',
      'i-steps': '../../iview/steps/index',
      'i-step': '../../iview/step/index',
      'i-button': '../../iview/button/index'
    }
  };
  // 声明页面中将要使用到的组件
  components = {
    bomm: bomm,
    centre: centre,
    titask: titask,
    rtask: rtask,
    mttask: mttask
  };
  // 声明页面所引用的Mixin实例
  // mixins = [testMixin];
  // 数据
  data = {
    taskType: -1
  };
  // 计算数据
  computed = {};
  // 方法
  methods = {};
  // 声明组件之间的事件处理函数
  events = {};
  //  生命周期
  onLoad(options) {
    this.taskType = options.taskType;
  }
}
</script>