<style lang="less">
// scroll-view {
//   position: absolute;
//   top: 100rpx;
//   bottom: 100rpx;
//   left: 0;
//   right: 0;
// }

.task-item {
  height: 100rpx;
  line-height: 100rpx;
  border-bottom: 1px solid #e1e1e1;
  width: 100%;
}

.task-title {
  font-size: 26rpx;
  font-family: MicrosoftYaHei;
  font-weight: bold;
  color: rgba(0, 0, 0, 1);
}

.task-subtitle {
  font-size: 26rpx;
  font-family: MicrosoftYaHei;
  font-weight: 400;
  color: rgba(0, 0, 0, 1);
  opacity: 0.7;
}

.task-item-border {
  border-top: none !important;
  border-bottom: 31rpx #eeeeee solid !important;
}

.link-way-bar {
  height: 60rpx;
  width: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
  font-size: 25rpx;
  font-family: MicrosoftYaHei;
  font-weight: 400;
  color: rgba(0, 0, 0, 1);
  opacity: 0.9;
}

.link-way-icon {
  height: 33rpx;
  width: 33rpx;
  margin-right: 16rpx;
}

.flex {
  display: flex;
  align-items: center;
}

.task-content-line {
  height: 60rpx;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.content-title {
  font-size: 25rpx;
  font-family: MicrosoftYaHei;
  color: #8b8b8b;
}
.content {
  font-size: 25rpx;
  font-family: MicrosoftYaHei;
  font-weight: 400;
  color: rgba(0, 0, 0, 1);
  opacity: 0.7;
}

.tip-time {
  font-size: 25rpx;
  font-family: MicrosoftYaHei;
  font-weight: 400;
  color: rgba(0, 0, 0, 1);
  opacity: 0.5;
}
</style>
<template>
  <view>
    <scroll-view scroll-y>
      <i-collapse
        name="{{name}}"
        accordion
      >
        <i-collapse-item
          title="XXX工厂维修任务"
          name="{{'name'+index}}"
          i-class="task-item-border"
          icon="../../img/factory.png"
          i-class-title="task-title"
          i-class-subtitle="task-subtitle"
          wx:for="{{task}}"
          i-class-head="task-item"
          subtitle="深圳市罗湖区"
          showsub="true"
        >
          <view
            slot="content"
            @tap="taskClick({{index}})"
          >
            <view class="task-content-line">
              <text class="content-title">维修对象</text>
              <text class="content">xxxxx</text>
            </view>
            <view class="task-content-line">
              <text class="content-title">维修地址</text>
              <text class="content">xxxxx</text>
            </view>
            <view class="task-content-line">
              <text class="content-title">联系人</text>
              <text class="content">xxxxx</text>
            </view>
            <view class="task-content-line">
              <text class="content-title">联系电话</text>
              <text class="content">xxxxx</text>
            </view>
            <view class="task-content-line">
              <text class="content-title">派单时间</text>
              <text class="content">xxxxx</text>
            </view>
          </view>
          <view
            slot="sub-content"
            @tap="taskClick({{index}})"
          >
            <view class="link-way-bar">
              <view class="flex">
                <text style="padding-right:20rpx;padding-top:10rpx;">用户评价:</text>
                <i-rate
                  bind:change="onChange1"
                  value="4"
                  disabled
                >
                </i-rate>
              </view>
              <text class="tip-time">2019-5-8 15:30</text>
            </view>
          </view>
        </i-collapse-item>
      </i-collapse>
      <i-load-more
        tip="没有更多数据了..."
        loading="{{ false }}"
      />
    </scroll-view>
  </view>
</template>
<script>
import wepy from 'wepy';
import toast from '../mixins/toast';

let self;

export default class EvaluateList extends wepy.page {
  config = {
    navigationBarTitleText: '用户评价',
    usingComponents: {
      'i-rate': '../../iview/rate/index',
      'i-collapse': '../../iview/collapse-sd/index',
      'i-collapse-item': '../../iview/collapse-item-sd/index'
    }
  };
  components = {};
  mixins = [];
  data = {
    task: [1, 2, 3, 4]
  };
  computed = {};
  methods = {
    taskClick(index) {
      self.methods.go('./evaluate-detail?taskType=1');
    },
    go(path) {
      wepy.navigateTo({
        url: path
      });
    }
  };
  onLoad() {
    self = this;
  }
}
</script>
